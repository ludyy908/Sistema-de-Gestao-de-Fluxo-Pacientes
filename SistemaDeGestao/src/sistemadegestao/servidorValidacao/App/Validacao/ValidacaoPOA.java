package sistemadegestao.servidorValidacao.App.Validacao;

import java.io.IOException;
import java.util.logging.Level;
import java.util.logging.Logger;


/**
* validacao/ValidacaoPOA.java .
* Generated by the IDL-to-Java compiler (portable), version "3.2"
* from Validacao.idl
* Tuesday, September 26, 2023 11:20:06 AM CAT
*/

public abstract class ValidacaoPOA extends org.omg.PortableServer.Servant
 implements sistemadegestao.servidorValidacao.App.Validacao.ValidacaoOperations, org.omg.CORBA.portable.InvokeHandler
{

  // Constructors

  private static java.util.Hashtable _methods = new java.util.Hashtable ();
  static
  {
    _methods.put ("validarByte", new java.lang.Integer (0));
    _methods.put ("validarString", new java.lang.Integer (1));
    _methods.put ("validarInt", new java.lang.Integer (2));
    _methods.put ("validarChar", new java.lang.Integer (3));
    _methods.put ("validarData", new java.lang.Integer (4));
    _methods.put ("validarHora", new java.lang.Integer (5));
    _methods.put ("validarTelefone", new java.lang.Integer (6));
    _methods.put ("mensagem", new java.lang.Integer (7));
  }

  public org.omg.CORBA.portable.OutputStream _invoke (String $method,
                                org.omg.CORBA.portable.InputStream in,
                                org.omg.CORBA.portable.ResponseHandler $rh)
  {
    org.omg.CORBA.portable.OutputStream out = null;
    java.lang.Integer __method = (java.lang.Integer)_methods.get ($method);
    if (__method == null)
      throw new org.omg.CORBA.BAD_OPERATION (0, org.omg.CORBA.CompletionStatus.COMPLETED_MAYBE);

    switch (__method.intValue ())
    {
       case 0:  // validacao/Validacao/validarByte
       {
         byte a = in.read_octet ();
         byte b = in.read_octet ();
         String s = in.read_string ();
         byte $result = (byte)0;
        try {
            $result = this.validarByte (a, b, s);
        } catch (IOException ex) {
            Logger.getLogger(ValidacaoPOA.class.getName()).log(Level.SEVERE, null, ex);
        }
         out = $rh.createReply();
         out.write_octet ($result);
         break;
       }

       case 1:  // validacao/Validacao/validarString
       {
         int a = in.read_long ();
         int b = in.read_long ();
         String s = in.read_string ();
         String $result = null;
        try {
            $result = this.validarString (a, b, s);
        } catch (IOException ex) {
            Logger.getLogger(ValidacaoPOA.class.getName()).log(Level.SEVERE, null, ex);
        }
         out = $rh.createReply();
         out.write_string ($result);
         break;
       }

       case 2:  // validacao/Validacao/validarInt
       {
         int a = in.read_long ();
         int b = in.read_long ();
         String s = in.read_string ();
         int $result = (int)0;
        try {
            $result = this.validarInt (a, b, s);
        } catch (IOException ex) {
            Logger.getLogger(ValidacaoPOA.class.getName()).log(Level.SEVERE, null, ex);
        }
         out = $rh.createReply();
         out.write_long ($result);
         break;
       }

       case 3:  // validacao/Validacao/validarChar
       {
         char a = in.read_char ();
         char b = in.read_char ();
         String c = in.read_string ();
         char $result = (char)0;
        try {
            $result = this.validarChar (a, b, c);
        } catch (IOException ex) {
            Logger.getLogger(ValidacaoPOA.class.getName()).log(Level.SEVERE, null, ex);
        }
         out = $rh.createReply();
         out.write_char ($result);
         break;
       }

       case 4:  // validacao/Validacao/validarData
       {
         String $result = null;
        try {
            $result = this.validarData ();
        } catch (IOException ex) {
            Logger.getLogger(ValidacaoPOA.class.getName()).log(Level.SEVERE, null, ex);
        }
         out = $rh.createReply();
         out.write_string ($result);
         break;
       }

       case 5:  // validacao/Validacao/validarHora
       {
         String $result = null;
        try {
            $result = this.validarHora ();
        } catch (IOException ex) {
            Logger.getLogger(ValidacaoPOA.class.getName()).log(Level.SEVERE, null, ex);
        }
         out = $rh.createReply();
         out.write_string ($result);
         break;
       }

       case 6:  // validacao/Validacao/validarTelefone
       {
         String $result[] = null;
        try {
            $result = this.validarTelefone ();
        } catch (IOException ex) {
            Logger.getLogger(ValidacaoPOA.class.getName()).log(Level.SEVERE, null, ex);
        }
         out = $rh.createReply();
         sistemadegestao.servidorValidacao.App.Validacao.ArrayHelper.write (out, $result);
         break;
       }

       case 7:  // validacao/Validacao/mensagem
       {
         String text = in.read_string ();
        try {
            this.mensagem (text);
        } catch (IOException ex) {
            Logger.getLogger(ValidacaoPOA.class.getName()).log(Level.SEVERE, null, ex);
        }
         out = $rh.createReply();
         break;
       }

       default:
         throw new org.omg.CORBA.BAD_OPERATION (0, org.omg.CORBA.CompletionStatus.COMPLETED_MAYBE);
    }

    return out;
  } // _invoke

  // Type-specific CORBA::Object operations
  private static String[] __ids = {
    "IDL:validacao/Validacao:1.0"};

  public String[] _all_interfaces (org.omg.PortableServer.POA poa, byte[] objectId)
  {
    return (String[])__ids.clone ();
  }

  public Validacao _this() 
  {
    return ValidacaoHelper.narrow(
    super._this_object());
  }

  public Validacao _this(org.omg.CORBA.ORB orb) 
  {
    return ValidacaoHelper.narrow(
    super._this_object(orb));
  }


} // class ValidacaoPOA
